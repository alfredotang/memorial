{"version":3,"sources":["hooks/useMeasureScroll.ts","hooks/useAutoScrollToTop.ts","hooks/useRWD.ts","hooks/useMeasure.ts","hooks/useMarkdownQuery.ts","theme/index.tsx","components/Layout/Header.tsx","components/Layout/index.tsx","components/PhotoAlbum/index.tsx","components/People/index.tsx","components/PeopleList/index.tsx","components/MDProvider/index.tsx","app/router.ts","app/index.tsx","reportWebVitals.ts","index.tsx"],"names":["useMeasureScroll","switchOn","useState","scrollX","scrollY","value","setValue","useEffect","handleScroll","window","addEventListener","removeEventListener","useAutoScrollToTop","pathname","useLocation","scrollTo","top","left","behavior","useRWD","params","useMediaQuery","isLargeThen_md","isLargeThen_lg","sm","md","lg","Error","useMeasure","ref","useRef","width","height","bounds","setBounds","ResizeObserver","entry","contentRect","ro","useLayoutEffect","current","observe","disconnect","useMarkdownQuery","url","postMarkdown","setPostMarkdown","fetch","then","response","text","themeColors","primary","secondary","background","paper","theme","extendTheme","colors","GlobalStyle","styles","css","ThemeProvider","children","HeaderBaseStyled","space","Wrapper","HeaderContent","props","showShadow","shadows","Header","history","useHistory","SHOW_HEADER_SHADOW","headingSize","handleRedirectToHome","replace","display","px","cursor","onClick","size","colorScheme","mr","variant","pathMatch","split","length","Layout","p","motion","div","BlockBaseStyled","breakpoints","ImgBlock","TextBlock","radii","wrapperVariants","hidden","opacity","scale","visible","transition","delayChildren","staggerChildren","imageVariants","y","textVariants","x","PhotoAlbum","imgSrc","imgAlt","mdSrc","initial","animate","variants","duration","src","alt","borderRadius","cardVariants","isActive","enableActiveMode","People","redirectTo","delay","avatarSize","whileHover","whileTap","push","style","backgroundColor","name","PeopleList","data","justifyContent","bg","spacing","flexWrap","map","item","path","H1","as","H2","H3","H4","Hr","color","Paragraph","fontsize","fontSize","InlineCode","Info","MDProvider","overrides","code","h1","h2","h3","h4","pre","hr","options","routes","component","lazy","exact","App","fallback","route","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","initialColorMode","config","document","getElementById"],"mappings":"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","file":"static/js/main.e7b1f133.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\ntype UseMeasureScroll = { scrollY: number; scrollX: number };\ntype UseMeasureScrollProps = { switchOn: boolean };\n\nconst useMeasureScroll = ({\n  switchOn,\n}: UseMeasureScrollProps): UseMeasureScroll => {\n  const [value, setValue] = useState<UseMeasureScroll>({\n    scrollX: 0,\n    scrollY: 0,\n  });\n\n  useEffect(() => {\n    if (switchOn) {\n      const handleScroll = () => {\n        setValue(() => {\n          return { scrollX: window.scrollX, scrollY: window.scrollY };\n        });\n      };\n      window.addEventListener('scroll', handleScroll);\n      return () => window.removeEventListener('scroll', handleScroll);\n    }\n  }, [switchOn]);\n\n  return value;\n};\n\nexport default useMeasureScroll;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nfunction useAutoScrollToTop() {\n  const { pathname } = useLocation();\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  }, [pathname]);\n}\n\nexport default useAutoScrollToTop;\n","import { useMediaQuery } from '@chakra-ui/react';\n\ntype DefaultVariants = string | null;\ntype UseRWDProps<T> = [T, T, T];\n\nfunction useRWD<T = DefaultVariants>(params: UseRWDProps<T>): T {\n  const [isLargeThen_md] = useMediaQuery('screen and (min-width: 30em)');\n  const [isLargeThen_lg] = useMediaQuery('screen and (min-width: 48em)');\n  const [sm, md, lg] = params;\n\n  if (lg && isLargeThen_lg) {\n    return lg;\n  }\n\n  if (md && isLargeThen_md) {\n    return md;\n  }\n\n  if (sm) {\n    return sm;\n  }\n\n  throw Error(`custom hook - useRWD params is undefined`);\n}\n\nexport default useRWD;\n","import { useState, useLayoutEffect, useRef, RefObject } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\ntype Bounds = { left: number; top: number; width: number; height: number };\n\ntype UseMeasure = { ref: RefObject<any>; bounds: Bounds };\n\nfunction useMeasure(): UseMeasure {\n  const ref = useRef<any>(null);\n  const [bounds, setBounds] = useState<Bounds>({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n  });\n  const [ro] = useState(\n    () => new ResizeObserver(([entry]) => setBounds(entry.contentRect))\n  );\n\n  useLayoutEffect(() => {\n    if (ref.current) {\n      ro.observe(ref.current);\n    }\n    return () => ro.disconnect();\n  }, [ro]);\n\n  return { ref, bounds };\n}\n\nexport default useMeasure;\n","import { useEffect, useState } from 'react';\n\ntype UseMarkdownQuery = { postMarkdown: string };\n\nconst useMarkdownQuery = (url: string): UseMarkdownQuery => {\n  const [postMarkdown, setPostMarkdown] = useState<string>('');\n\n  // useEffect with an empty dependency array (`[]`) runs only once\n  useEffect(() => {\n    fetch(url)\n      .then((response) => response.text())\n      .then((text) => {\n        // Logs a string of Markdown content.\n        // Now you could use e.g. <rexxars/react-markdown> to render it.\n        // console.log(text);\n        setPostMarkdown(text);\n      });\n  }, [url]);\n\n  return { postMarkdown };\n};\n\nexport default useMarkdownQuery;\n","import { FC, Fragment } from 'react';\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react';\nimport {\n  ThemeProvider as EmotionThemeProvider,\n  Theme,\n  Global,\n  css,\n} from '@emotion/react';\n\n// https://materialpalettes.com/\nconst themeColors = {\n  primary: {\n    '50': '#e1f2f4',\n    '100': '#b3dee2',\n    '200': '#7fcacf',\n    '300': '#47b5bb',\n    '400': '#0da5ab',\n    '500': '#009599',\n    '600': '#00898b',\n    '700': '#007979',\n    '800': '#006969',\n    '900': '#004d4a',\n  },\n  secondary: {\n    '50': '#f9e6ec',\n    '100': '#f2c1d0',\n    '200': '#ea9ab2',\n    '300': '#e57494',\n    '400': '#e3587e',\n    '500': '#e14369',\n    '600': '#d03f65',\n    '700': '#ba3a5f',\n    '800': '#a5345a',\n    '900': '#812b50',\n  },\n  text: '#454f5b',\n  background: '#F2EEE4',\n  paper: '#fff',\n};\n\nconst theme = extendTheme({\n  colors: {\n    primary: themeColors.primary,\n    secondary: themeColors.secondary,\n    background: themeColors.background,\n    paper: themeColors.paper,\n    text: themeColors.text,\n  },\n});\n\nconst GlobalStyle: FC = () => {\n  return (\n    <Global\n      styles={css`\n        * {\n          background-color: ${theme.colors.background};\n          color: ${theme.colors.text};\n        }\n      `}\n    />\n  );\n};\n\nconst ThemeProvider: FC = ({ children }) => {\n  return (\n    <ChakraProvider>\n      <EmotionThemeProvider theme={theme}>\n        <Fragment>\n          <GlobalStyle />\n          {children}\n        </Fragment>\n      </EmotionThemeProvider>\n    </ChakraProvider>\n  );\n};\n\nexport { ThemeProvider, theme };\nexport type { Theme };\n","import { FC } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { Heading, Box, Button, ThemeTypings } from '@chakra-ui/react';\nimport { theme } from '@src/theme';\nimport { useMeasureScroll, useRWD } from '@src/hooks';\n\ntype HeadingSizeVariants = ThemeTypings['components']['Heading']['sizes'];\n\nconst HeaderBaseStyled = css`\n  width: 100%;\n  height: ${theme.space['20']};\n  box-sizing: border-box;\n`;\n\nconst Wrapper = styled.header`\n  ${HeaderBaseStyled}\n`;\n\nconst HeaderContent = styled.div<{ showShadow: boolean }>`\n  ${HeaderBaseStyled}\n  position: fixed;\n  top: 0px;\n  align-items: center;\n  justify-content: space-between;\n  display: flex;\n  background-color: ${(props) => props.theme.colors.background};\n  box-shadow: ${({ showShadow, theme }) =>\n    showShadow ? theme.shadows['md'] : 'none'};\n`;\n\nconst Header: FC = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const { scrollY } = useMeasureScroll({ switchOn: true });\n  const SHOW_HEADER_SHADOW = scrollY > 40;\n\n  const headingSize = useRWD<HeadingSizeVariants>(['sm', 'lg', 'xl']);\n\n  const handleRedirectToHome = () => {\n    history.replace('/');\n  };\n\n  const handleHistoryBack = () => {\n    const pathMatch = pathname.split('/');\n    if (pathMatch.length > 2) {\n      history.replace(`/${pathMatch[1]}`);\n    } else {\n      handleRedirectToHome();\n    }\n  };\n\n  return (\n    <Wrapper>\n      <HeaderContent showShadow={SHOW_HEADER_SHADOW}>\n        <Box display=\"flex\" px={[5, 10, 20]}>\n          <Heading\n            cursor=\"pointer\"\n            onClick={handleRedirectToHome}\n            size={headingSize}\n            colorScheme=\"primary\"\n          >\n            Memorial\n          </Heading>\n        </Box>\n        {pathname !== '/' && (\n          <Box display=\"flex\" mr={[5, 10, 20]}>\n            <Button\n              variant=\"link\"\n              onClick={handleHistoryBack}\n              colorScheme=\"primary\"\n            >\n              Back\n            </Button>\n          </Box>\n        )}\n      </HeaderContent>\n    </Wrapper>\n  );\n};\n\nexport default Header;\n","import { FC } from 'react';\nimport { Box } from '@chakra-ui/react';\nimport Header from './Header';\n\nconst Layout: FC = ({ children }) => {\n  return (\n    <div>\n      <Header />\n      <Box p={[5, 5, 10]}>{children}</Box>\n    </div>\n  );\n};\n\nexport default Layout;\n","import { FC } from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { Image, Box } from '@chakra-ui/react';\nimport { motion, Variants } from 'framer-motion';\nimport { MDProvider } from '@src/components';\nimport { theme } from '@src/theme';\n\nconst Wrapper = styled(motion.div)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst BlockBaseStyled = css`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 580px;\n  flex-basis: 100%;\n\n  ${theme.breakpoints.lg} {\n    flex-basis: 50%;\n  }\n`;\n\nconst ImgBlock = styled(motion.div)`\n  ${BlockBaseStyled}\n`;\n\nconst TextBlock = styled(motion.div)`\n  ${BlockBaseStyled}\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.paper};\n  padding: ${(props) => props.theme.space[10]};\n  border-radius: ${(props) => props.theme.radii['lg']};\n`;\n\nconst wrapperVariants: Variants = {\n  hidden: { opacity: 1, scale: 0 },\n  visible: {\n    opacity: 1,\n    scale: 1,\n    transition: {\n      delayChildren: 0.5,\n      staggerChildren: 0.5,\n    },\n  },\n};\n\nconst imageVariants: Variants = {\n  hidden: { y: -20, opacity: 0 },\n  visible: {\n    y: 0,\n    opacity: 1,\n    scale: 1,\n  },\n};\n\nconst textVariants: Variants = {\n  hidden: { x: -20, opacity: 0 },\n  visible: {\n    x: 0,\n    opacity: 1,\n    scale: 1,\n  },\n};\n\ntype Props = {\n  imgSrc: string;\n  imgAlt: string;\n  mdSrc: string;\n};\n\nconst PhotoAlbum: FC<Props> = ({ imgSrc, imgAlt, mdSrc }) => {\n  return (\n    <Wrapper\n      initial=\"hidden\"\n      animate=\"visible\"\n      variants={wrapperVariants}\n      transition={{ duration: 2 }}\n    >\n      <ImgBlock variants={imageVariants}>\n        <Image src={imgSrc} alt={imgAlt} borderRadius=\"lg\" />\n      </ImgBlock>\n      <TextBlock variants={textVariants}>\n        <MDProvider src={mdSrc} />\n      </TextBlock>\n    </Wrapper>\n  );\n};\n\nexport default PhotoAlbum;\n","import { FC } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport { Avatar, ThemeTypings } from '@chakra-ui/react';\nimport { motion, Variants } from 'framer-motion';\nimport { useRWD } from '@src/hooks';\n\nconst cardVariants: Variants = {\n  hidden: { opacity: 1, scale: 0 },\n  visible: {\n    opacity: 1,\n    scale: 1,\n  },\n};\n\ntype WrapperProps = {\n  isActive: boolean;\n  enableActiveMode: boolean;\n};\n\ntype AvatarSizeVariants = ThemeTypings['components']['Avatar']['sizes'];\n\nconst Wrapper = styled(motion.div)<WrapperProps>`\n  background-color: transparent;\n  ${({ isActive, enableActiveMode }) =>\n    enableActiveMode && !isActive && `filter: blur(2px);`}\n  &:hover {\n    filter: none;\n  }\n`;\n\ntype Props = {\n  src: string;\n  alt: string;\n  isActive?: boolean;\n  redirectTo?: string;\n  duration?: number;\n  delay?: number;\n  enableActiveMode?: boolean;\n};\n\nconst People: FC<Props> = ({\n  src,\n  alt,\n  redirectTo,\n  duration = 0,\n  delay = 0,\n  isActive = true,\n  enableActiveMode = false,\n}) => {\n  const history = useHistory();\n  const handleRedirectToPeople = () => {\n    if (redirectTo) {\n      history.push(redirectTo);\n    }\n  };\n\n  const avatarSize = useRWD<AvatarSizeVariants>(['md', 'lg', '2xl']);\n\n  return (\n    <Wrapper\n      initial=\"hidden\"\n      animate=\"visible\"\n      variants={cardVariants}\n      transition={{ duration, delay }}\n      isActive={isActive}\n      enableActiveMode={enableActiveMode}\n    >\n      <motion.div\n        whileHover={{ scale: 1.5 }}\n        whileTap={{ scale: 1.2 }}\n        onClick={handleRedirectToPeople}\n        style={{ backgroundColor: 'rgba(0,0,0,0)' }}\n      >\n        <Avatar src={src} name={alt} size={avatarSize} cursor=\"pointer\" />\n      </motion.div>\n    </Wrapper>\n  );\n};\n\nexport default People;\n","import { FC } from 'react';\nimport { People } from '@src/components';\nimport { SimpleGrid, Box } from '@chakra-ui/react';\n\nexport interface PeopleItem {\n  src: string;\n  alt: string;\n  path?: string;\n  isActive: boolean;\n}\n\ntype Props = {\n  enableActiveMode?: boolean;\n  duration?: number;\n  delay?: number;\n  data: PeopleItem[];\n};\n\nconst PeopleList: FC<Props> = ({\n  duration,\n  delay,\n  enableActiveMode = false,\n  data,\n}) => {\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" bg=\"transparent\">\n      <SimpleGrid\n        spacing={[5, 5, 10]}\n        display=\"flex\"\n        flexWrap=\"wrap\"\n        justifyContent=\"flex-start\"\n        bg=\"transparent\"\n      >\n        {data.map((item) => (\n          <People\n            key={item.alt}\n            src={item.src}\n            alt={item.alt}\n            redirectTo={item.path}\n            isActive={item.isActive}\n            enableActiveMode={enableActiveMode}\n            duration={duration}\n            delay={delay}\n          />\n        ))}\n      </SimpleGrid>\n    </Box>\n  );\n};\n\nexport default PeopleList;\n","import { FC } from 'react';\nimport {\n  Code,\n  Heading,\n  Box,\n  TypographyProps,\n  Alert,\n  Divider,\n} from '@chakra-ui/react';\nimport styled from '@emotion/styled';\nimport Markdown, { MarkdownToJSX } from 'markdown-to-jsx';\nimport { useMarkdownQuery, useRWD } from '@src/hooks';\n\nconst H1: FC = ({ children }) => {\n  return (\n    <Heading as=\"h1\" size=\"lg\">\n      {children}\n    </Heading>\n  );\n};\n\nconst H2: FC = ({ children }) => {\n  return (\n    <Heading as=\"h2\" size=\"md\">\n      {children}\n    </Heading>\n  );\n};\n\nconst H3: FC = ({ children }) => {\n  return (\n    <Heading as=\"h3\" size=\"sm\">\n      {children}\n    </Heading>\n  );\n};\n\nconst H4: FC = ({ children }) => {\n  return (\n    <Heading as=\"h4\" size=\"xs\">\n      {children}\n    </Heading>\n  );\n};\n\nconst Hr: FC = ({ children }) => {\n  return (\n    <Divider bg=\"paper\" color=\"text\">\n      {children}\n    </Divider>\n  );\n};\n\ntype FontSizeVariants = TypographyProps['fontSize'];\n\nconst Paragraph: FC = ({ children }) => {\n  const fontsize = useRWD<FontSizeVariants>(['md', 'xl', '2xl']);\n  return (\n    <Box fontSize={fontsize} bg=\"paper\" borderRadius=\"lg\">\n      {children}\n    </Box>\n  );\n};\n\nconst InlineCode: FC = ({ children }) => {\n  const fontsize = useRWD<FontSizeVariants>(['md', 'xl', '2xl']);\n  return (\n    <Code fontSize={fontsize} colorScheme=\"primary\">\n      {children}\n    </Code>\n  );\n};\n\nconst Info: FC = ({ children }) => {\n  const fontsize = useRWD<FontSizeVariants>(['md', 'xl', '2xl']);\n  return <Alert fontSize={fontsize}>{children}</Alert>;\n};\n\nconst Wrapper = styled.div`\n  background-color: ${(props) => props.theme.colors.paper};\n  em,\n  del,\n  div {\n    background-color: inherit;\n  }\n`;\n\ntype Props = {\n  src: string;\n};\n\nconst MDProvider: FC<Props> = ({ src }) => {\n  const { postMarkdown } = useMarkdownQuery(src);\n  const overrides: MarkdownToJSX.Overrides = {\n    code: InlineCode,\n    h1: H1,\n    h2: H2,\n    h3: H3,\n    h4: H4,\n    p: Paragraph,\n    pre: Info,\n    hr: Hr,\n  };\n  return (\n    <Wrapper>\n      <Markdown options={{ overrides }}>{postMarkdown}</Markdown>\n    </Wrapper>\n  );\n};\n\nexport default MDProvider;\n","import { lazy, LazyExoticComponent, FunctionComponent } from 'react';\n\nconst Home = lazy(() => import('@src/pages'));\nconst ProposeDay = lazy(() => import('@src/pages/ProposeDay'));\nconst ThanksList = lazy(() => import('@src/pages/ProposeDay/ThanksList'));\n\ninterface Routes {\n  component: LazyExoticComponent<FunctionComponent>;\n  path: string;\n  exact: boolean;\n  name: string;\n}\n\nconst routes: Routes[] = [\n  {\n    component: Home,\n    path: '/',\n    exact: true,\n    name: 'home',\n  },\n\n  {\n    component: ProposeDay,\n    path: '/proposeDay',\n    exact: true,\n    name: 'proposeDay',\n  },\n\n  {\n    component: ThanksList,\n    path: '/proposeDay/thanksList/:name',\n    exact: false,\n    name: 'proposeDay-thanksList',\n  },\n];\n\nexport { routes };\nexport type { Routes };\n","import { FC, Suspense } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { ThemeProvider } from '@src/theme';\nimport { Layout } from '@src/components';\nimport { useAutoScrollToTop } from '@src/hooks';\nimport { routes } from './router';\n\nconst App: FC = () => {\n  useAutoScrollToTop();\n  return (\n    <ThemeProvider>\n      <Switch>\n        <Layout>\n          <Suspense fallback=\"\">\n            {routes.map((route) => (\n              <Route\n                key={route.name}\n                component={route.component}\n                exact={route.exact}\n                path={route.path}\n              />\n            ))}\n            <Route>\n              <Redirect to=\"/\" />\n            </Route>\n          </Suspense>\n        </Layout>\n      </Switch>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry?: () => void) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ColorModeScript } from '@chakra-ui/react';\nimport { theme, ThemeProvider } from '@src/theme';\nimport App from '@src/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n      <ThemeProvider>\n        <App />\n      </ThemeProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}