{"version":3,"sources":["assets/images/people/yu-hua.jpg","assets/images/people/joyce-wei.jpg","assets/images/people/marry.jpg","assets/images/people/sihyin-chen.jpg","assets/images/people/esther-cheng.jpg","pages/ProposeDay/contents/md/yuHua.md","pages/ProposeDay/contents/md/joyceWei.md","pages/ProposeDay/contents/md/marryFu.md","pages/ProposeDay/contents/md/sihYin.md","pages/ProposeDay/contents/data.ts","pages/ProposeDay/contents/md/estherCheng.md","../../../src/grid.tsx","../../../src/simple-grid.tsx","assets/images/banner/proposeDay.jpg","pages/ProposeDay/contents/md/proposeDay.md","pages/ProposeDay/index.tsx"],"names":["peopleListData","src","EstherChengImg","alt","name","md","YuHuaImg","YuHuaMd","JoyceWeiImg","JoyceWeiMd","MarryImg","MarryMd","SihYinImg","SihYinMd","Grid","forwardRef","templateColumns","styles","display","gridArea","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","ref","__css","SimpleGrid","count","width","minChildWidth","mapResponsive","value","isNull","n","isNumber","gap","columnGap","rowGap","ProposeDay","useMeasure","bounds","data","useRWD","map","item","path","isActive","column","flexDirection","spacing","imgSrc","BannerImg","imgAlt","mdSrc","ProposeDayMd","height","justifyContent","position","bottom","py","bg","delay","duration"],"mappings":"wIAAe,UAA0B,mCCA1B,MAA0B,sCCA1B,MAA0B,kCCA1B,MAA0B,wCCA1B,MAA0B,yCCA1B,MAA0B,iCCA1B,MAA0B,oCCA1B,MAA0B,mCCA1B,MAA0B,kCCmB5BA,EAAqC,CAChD,CACEC,IAAKC,EACLC,IAAK,eACLC,KAAM,eACNC,GCxBW,IAA0B,wCD0BvC,CACEJ,IAAKK,EACLH,IAAK,SACLC,KAAM,SACNC,GAAIE,GAEN,CACEN,IAAKO,EACLL,IAAK,YACLC,KAAM,YACNC,GAAII,GAEN,CACER,IAAKS,EACLP,IAAK,WACLC,KAAM,WACNC,GAAIM,GAEN,CACEV,IAAKW,EACLT,IAAK,UACLC,KAAM,eACNC,GAAIQ,K,8aE3BD,IAAMC,EAAOC,aAA6B,cAAgB,IACzD,EAAN,EAAM,OAAN,EAAM,gBAAN,EAAM,MAAN,EAAM,SAAN,EAAM,YAAN,EAAM,SAAN,EAAM,MAAN,EAAM,WAAN,EAAM,WAAN,EAAM,eAAN,EAAM,YAYJC,EAZF,EAYEA,gBAZF,+IAgBMC,EAAS,CACbC,QADa,OAEbC,SAFa,EAGbC,kBAHa,EAIbC,QAJa,EAKbC,WALa,EAMbC,cANa,EAObC,gBAPa,EAQbC,WARa,EASbC,QATa,EAUbC,aAVa,EAWbC,aAXa,EAYbC,iBAZa,EAabC,oBAAqBd,GAGvB,OAAO,gBAAC,IAAD,OAAYe,IAAZ,EAAsBC,MAAOf,GAApC,OAGE,EAAJ,IACEH,sB,+MCpBK,IAAMmB,EAAalB,aAAmC,cAAgB,IAiCrDmB,EANAC,EA1BhB,EAAN,EAAM,UAAN,EAAM,WAAN,EAAM,WAAN,EAAM,QAAwCC,EAA9C,EAA8CA,cAA9C,E,oIAAA,gEAEMpB,EAAkBoB,GAwBFD,EAxBe,EAyB9BE,YAAcF,GAAQG,YAAD,OAC1BC,gDANUC,EAMVD,GALKE,eAAiBD,EAAjBC,KAAP,GAIA,WALF,IAAcD,OAUUN,EA9BtB,EA+BOG,YAAcH,GAAQI,YAAD,OAC1BC,gCADF,aA3BA,OACE,qBACER,IADF,EAEEW,IAFF,EAGEC,UAHF,EAIEC,OAJF,EAKE5B,gBAAiBA,GANrB,OAYE,EAAJ,IACEiB,4B,qBC1Da,MAA0B,uCCA1B,MAA0B,sC,wBCgD1BY,UAtCQ,WAAO,IAAD,EACHC,cAAhBf,EADmB,EACnBA,IAAKgB,EADc,EACdA,OAGPC,GAFSC,YAAuB,CAAC,OAAQ,OAAQ,SAE5BjD,IAAekD,KAAI,SAACC,GAC7C,MAAO,CACL/C,KAAM+C,EAAK/C,KACXH,IAAKkD,EAAKlD,IACVE,IAAKgD,EAAKhD,IACViD,KAAK,0BAAD,OAA4BD,EAAK/C,KAAjC,KACJiD,UAAU,OAId,OACE,eAACpB,EAAD,CACEqB,OAAQ,EACRpC,QAAQ,OACRqC,cAAc,SACdC,QAAS,CAAC,EAAG,EAAG,IAJlB,UAME,cAAC,IAAD,CAAYC,OAAQC,EAAWC,OAAO,aAAaC,MAAOC,IAC1D,cAAC,IAAD,CAAKC,OAAM,UAAKf,EAAOe,OAAZ,MAAwB5C,QAAQ,OAAO6C,eAAe,SAAjE,SACE,cAAC,IAAD,CACEC,SAAS,QACTjC,IAAKA,EACLkC,OAAQ,EACR9B,MAAM,OACN+B,GAAI,EACJC,GAAG,cANL,SAQE,cAAC,IAAD,CAAYC,MAAO,EAAGC,SAAU,EAAGrB,KAAMA","file":"static/js/4.c523b8b3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/yu-hua.8f875795.jpg\";","export default __webpack_public_path__ + \"static/media/joyce-wei.bc988c71.jpg\";","export default __webpack_public_path__ + \"static/media/marry.fd5b8c0b.jpg\";","export default __webpack_public_path__ + \"static/media/sihyin-chen.f32cc8a1.jpg\";","export default __webpack_public_path__ + \"static/media/esther-cheng.32a80eac.jpg\";","export default __webpack_public_path__ + \"static/media/yuHua.acea9ac3.md\";","export default __webpack_public_path__ + \"static/media/joyceWei.424c43c9.md\";","export default __webpack_public_path__ + \"static/media/marryFu.7a7b2ea2.md\";","export default __webpack_public_path__ + \"static/media/sihYin.8157a1b7.md\";","import YuHuaImg from '@src/assets/images/people/yu-hua.jpg';\nimport JoyceWeiImg from '@src/assets/images/people/joyce-wei.jpg';\nimport MarryImg from '@src/assets/images/people/marry.jpg';\nimport SihYinImg from '@src/assets/images/people/sihyin-chen.jpg';\nimport EstherChengImg from '@src/assets/images/people/esther-cheng.jpg';\n\nimport YuHuaMd from './md/yuHua.md';\nimport JoyceWeiMd from './md/joyceWei.md';\nimport MarryMd from './md/marryFu.md';\nimport SihYinMd from './md/sihYin.md';\nimport EstherChengMd from './md/estherCheng.md';\n\nexport interface PeopleListEntity {\n  src: string;\n  alt: string;\n  name: string;\n  md: string;\n}\n\nexport const peopleListData: PeopleListEntity[] = [\n  {\n    src: EstherChengImg,\n    alt: 'Esther Cheng',\n    name: 'esther-cheng',\n    md: EstherChengMd,\n  },\n  {\n    src: YuHuaImg,\n    alt: 'Yu Hua',\n    name: 'yu-hua',\n    md: YuHuaMd,\n  },\n  {\n    src: JoyceWeiImg,\n    alt: 'Joyce Wei',\n    name: 'joyce-wei',\n    md: JoyceWeiMd,\n  },\n  {\n    src: MarryImg,\n    alt: 'Marry FU',\n    name: 'marry-fu',\n    md: MarryMd,\n  },\n  {\n    src: SihYinImg,\n    alt: 'Sih Yin',\n    name: 'sih-yin-chen',\n    md: SihYinMd,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/estherCheng.7eaa9b5c.md\";","import {\n  chakra,\n  forwardRef,\n  ResponsiveValue,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { filterUndefined, mapResponsive, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { BoxProps } from \"./box\"\n\nexport interface GridProps extends HTMLChakraProps<\"div\">, GridOptions {}\n\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/docs/layout/grid\n */\nexport const Grid = forwardRef<GridProps, \"div\">((props, ref) => {\n  const {\n    area,\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props\n\n  const styles = {\n    display: \"grid\",\n    gridArea: area,\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nif (__DEV__) {\n  Grid.displayName = \"Grid\"\n}\n\nexport interface GridOptions {\n  /**\n   * Short hand prop for `gridTemplateColumns`\n   * @type SystemProps[\"gridTemplateColumns\"]\n   */\n  templateColumns?: SystemProps[\"gridTemplateColumns\"]\n  /**\n   * Short hand prop for `gridGap`\n   * @type SystemProps[\"gridGap\"]\n   */\n  gap?: SystemProps[\"gridGap\"]\n  /**\n   * Short hand prop for `gridRowGap`\n   * @type SystemProps[\"gridRowGap\"]\n   */\n  rowGap?: SystemProps[\"gridRowGap\"]\n  /**\n   * Short hand prop for `gridColumnGap`\n   * @type SystemProps[\"gridColumnGap\"]\n   */\n  columnGap?: SystemProps[\"gridColumnGap\"]\n  /**\n   * Short hand prop for `gridAutoFlow`\n   * @type SystemProps[\"gridAutoFlow\"]\n   */\n  autoFlow?: SystemProps[\"gridAutoFlow\"]\n  /**\n   * Short hand prop for `gridAutoRows`\n   * @type SystemProps[\"gridAutoRows\"]\n   */\n  autoRows?: SystemProps[\"gridAutoRows\"]\n  /**\n   * Short hand prop for `gridAutoColumns`\n   * @type SystemProps[\"gridAutoColumns\"]\n   */\n  autoColumns?: SystemProps[\"gridAutoColumns\"]\n  /**\n   * Short hand prop for `gridTemplateRows`\n   * @type SystemProps[\"gridTemplateRows\"]\n   */\n  templateRows?: SystemProps[\"gridTemplateRows\"]\n  /**\n   * Short hand prop for `gridTemplateAreas`\n   * @type SystemProps[\"gridTemplateAreas\"]\n   */\n  templateAreas?: SystemProps[\"gridTemplateAreas\"]\n  /**\n   * Short hand prop for `gridArea`\n   * @type SystemProps[\"gridArea\"]\n   */\n  area?: SystemProps[\"gridArea\"]\n  /**\n   * Short hand prop for `gridColumn`\n   * @type SystemProps[\"gridColumn\"]\n   */\n  column?: SystemProps[\"gridColumn\"]\n  /**\n   * Short hand prop for `gridRow`\n   * @type SystemProps[\"gridRow\"]\n   */\n  row?: SystemProps[\"gridRow\"]\n}\n\nexport interface GridItemProps extends BoxProps {\n  /**\n   * The number of columns the grid item should `span`.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colSpan?: ResponsiveValue<number | \"auto\">\n  /**\n   * The column number the grid item should start.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowSpan?: ResponsiveValue<number | \"auto\">\n}\n\nfunction spanFn(span?: ResponsiveValue<number | \"auto\">) {\n  return mapResponsive(span, (value) =>\n    value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`,\n  )\n}\n\nexport const GridItem = forwardRef<GridItemProps, \"div\">((props, ref) => {\n  const {\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props\n\n  const styles = filterUndefined({\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd,\n  })\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n","import { ResponsiveValue, forwardRef } from \"@chakra-ui/system\"\nimport { mapResponsive, isNumber, isNull, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { Grid, GridProps } from \"./grid\"\n\ninterface SimpleGridOptions {\n  /**\n   * The width at which child elements will break into columns. Pass a number for pixel values or a string for any other valid CSS length.\n   */\n  minChildWidth?: GridProps[\"minWidth\"]\n  /**\n   * The number of columns\n   */\n  columns?: ResponsiveValue<number>\n  /**\n   * The gap between the grid items\n   */\n  spacing?: GridProps[\"gridGap\"]\n  /**\n   * The column gap between the grid items\n   */\n  spacingX?: GridProps[\"gridGap\"]\n  /**\n   * The row gap between the grid items\n   */\n  spacingY?: GridProps[\"gridGap\"]\n}\n\nexport interface SimpleGridProps extends GridProps, SimpleGridOptions {}\n\n/**\n * SimpleGrid\n *\n * React component make that providers a simpler interface, and\n * make its easy to create responsive grid layouts.\n *\n * @see Docs https://chakra-ui.com/docs/layout/simple-grid\n */\nexport const SimpleGrid = forwardRef<SimpleGridProps, \"div\">((props, ref) => {\n  const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props\n\n  const templateColumns = minChildWidth\n    ? widthToColumns(minChildWidth)\n    : countToColumns(columns)\n\n  return (\n    <Grid\n      ref={ref}\n      gap={spacing}\n      columnGap={spacingX}\n      rowGap={spacingY}\n      templateColumns={templateColumns}\n      {...rest}\n    />\n  )\n})\n\nif (__DEV__) {\n  SimpleGrid.displayName = \"SimpleGrid\"\n}\n\nfunction toPx(n: string | number) {\n  return isNumber(n) ? `${n}px` : n\n}\n\nfunction widthToColumns(width: any) {\n  return mapResponsive(width, (value) =>\n    isNull(value) ? null : `repeat(auto-fit, minmax(${toPx(value)}, 1fr))`,\n  )\n}\n\nfunction countToColumns(count: any) {\n  return mapResponsive(count, (value) =>\n    isNull(value) ? null : `repeat(${value}, 1fr)`,\n  )\n}\n","export default __webpack_public_path__ + \"static/media/proposeDay.02317309.jpg\";","export default __webpack_public_path__ + \"static/media/proposeDay.be79a051.md\";","import { FC } from 'react';\nimport { SimpleGrid, Box, PositionProps } from '@chakra-ui/react';\nimport { PhotoAlbum, PeopleList, PeopleItem } from '@src/components';\nimport BannerImg from '@src/assets/images/banner/proposeDay.jpg';\nimport ProposeDayMd from './contents/md/proposeDay.md';\nimport { useMeasure, useRWD } from '@src/hooks';\nimport { peopleListData } from './contents/data';\n\ntype BottomVariants = PositionProps['bottom'];\n\nconst ProposeDay: FC = () => {\n  const { ref, bounds } = useMeasure();\n  const bottom = useRWD<BottomVariants>(['15px', '15px', '30px']);\n\n  const data: PeopleItem[] = peopleListData.map((item) => {\n    return {\n      name: item.name,\n      src: item.src,\n      alt: item.alt,\n      path: `/proposeDay/thanksList/${item.name}/`,\n      isActive: false,\n    };\n  });\n\n  return (\n    <SimpleGrid\n      column={2}\n      display=\"flex\"\n      flexDirection=\"column\"\n      spacing={[5, 5, 10]}\n    >\n      <PhotoAlbum imgSrc={BannerImg} imgAlt=\"proposeDay\" mdSrc={ProposeDayMd} />\n      <Box height={`${bounds.height}px`} display=\"flex\" justifyContent=\"center\">\n        <Box\n          position=\"fixed\"\n          ref={ref}\n          bottom={0}\n          width=\"100%\"\n          py={5}\n          bg=\"transparent\"\n        >\n          <PeopleList delay={1} duration={1} data={data} />\n        </Box>\n      </Box>\n    </SimpleGrid>\n  );\n};\n\nexport default ProposeDay;\n"],"sourceRoot":""}